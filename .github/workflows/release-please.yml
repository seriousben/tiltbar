name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          # This should match your package name
          package-name: tiltbar
          # Release type for versioning strategy
          release-type: simple

  build:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    uses: ./.github/workflows/build.yml
    with:
      version: ${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}
      upload_artifacts: false

  upload:
    needs: [release-please, build]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rebuild tarball for upload
        run: |
          VERSION="${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}"

          # Build the binaries
          swift build -c release --arch arm64
          mkdir -p dist
          cp .build/arm64-apple-macosx/release/TiltBar dist/TiltBar-arm64
          swift build -c release --arch x86_64
          cp .build/x86_64-apple-macosx/release/TiltBar dist/TiltBar-x86_64
          lipo -create dist/TiltBar-arm64 dist/TiltBar-x86_64 -output dist/TiltBar
          chmod +x dist/TiltBar

          # Create tarball
          tar -czf tiltbar-${VERSION}.tar.gz \
            -C dist TiltBar \
            -C ../Sources/TiltBar/Resources \
            tilt-icon.png tilt-gray.png tilt-red.png \
            tilt-icon.ico tilt-gray.ico tilt-red.ico

      - name: Upload release artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}"
          gh release upload ${{ needs.release-please.outputs.tag_name }} tiltbar-${VERSION}.tar.gz

      - name: Update Homebrew tap
        env:
          GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
        run: |
          VERSION="${{ needs.release-please.outputs.major }}.${{ needs.release-please.outputs.minor }}.${{ needs.release-please.outputs.patch }}"

          # Calculate SHA256 of the release tarball
          SHA256=$(curl -sL https://github.com/seriousben/tiltbar/archive/refs/tags/v${VERSION}.tar.gz | shasum -a 256 | cut -d' ' -f1)

          # Clone the tap repository
          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/seriousben/homebrew-tiltbar.git tap
          cd tap

          # Update the formula
          sed -i.bak "s|archive/refs/tags/v[0-9]*\.[0-9]*\.[0-9]*\.tar\.gz|archive/refs/tags/v${VERSION}.tar.gz|g" Formula/tiltbar.rb
          sed -i.bak "s|sha256 \".*\"|sha256 \"${SHA256}\"|g" Formula/tiltbar.rb
          rm Formula/tiltbar.rb.bak

          # Commit and push if there are changes
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Formula/tiltbar.rb
          git commit -m "feat: update tiltbar to v${VERSION}" || exit 0
          git push
